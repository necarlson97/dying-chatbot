ps = nltk.stem.PorterStemmer()

tokens = nltk.word_tokenize(input)
tokens = [ ps.stem(token) for token in tokens ]
tags = nltk.pos_tag(tokens)


print('\t', tags)
for word, tag in tags:
  if word == 'it' or word == 'are': continue
  if tag.startswith('NN') or tag.startswith('PR'):
    sub = word
  if tag.startswith('VB') or tag.startswith('W'):
    act = word

    def create():
  eng = Engine(stdscr)

  thr = threading.Thread(target=eng.run)
  thr.daemon = True
  thr.start()

  return eng

  if __name__ == '__main__':

  import time

import input_recog
import text_mode

eng = text_mode.start()

while eng.running:
  time.sleep(1)
def create(stdscr):
  return Engine(stdscr)
  
def start():
  eng = curses.wrapper(create)

  thr = threading.Thread(target=eng.run)
  thr.daemon = True
  thr.start()

  return eng

if __name__ == '__main__':
  eng = curses.wrapper(create)
  eng.run()